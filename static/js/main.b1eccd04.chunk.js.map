{"version":3,"sources":["routes/addDish/addDish.module.scss","routes/addDish/components/inputField/inputField.module.scss","routes/addDish/validationSchema/validationSchema.js","routes/addDish/requests/postNewDish.js","routes/addDish/components/inputField/InputField.js","routes/addDish/AddDish.js","App.js","index.js"],"names":["module","exports","validationSchema","Yup","name","required","max","min","preparation_time","matches","no_of_slices","notRequired","when","is","val","then","diameter","spiciness_scale","slices_of_bread","postNewDish","dishData","a","myHeaders","Headers","append","type","data","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","request","response","status","console","log","message","InputField","text","placeholder","step","options","className","InputFieldCSS","inputContainer","htmlFor","inputContainer__input","as","map","index","value","autoComplete","inputContainer__error","AddDish","useState","httpResponse","setHttpResponse","showSubmitInfo","setShowSubmitInfo","AddDishCSS","mainContainer","initialValues","onSubmit","setTimeout","values","mainContainer__contentContainer","mainContainer__contentContainer__imgContainer","mainContainer__contentContainer__addDishContainer","mainContainer__contentContainer__addDishContainer__headerContainer","mainContainer__contentContainer__addDishContainer__formContainer","mainContainer__contentContainer__addDishContainer__formContainer__submitContainer","style","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1eccd04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"addDish_mainContainer__2VXap\",\"mainContainer__contentContainer\":\"addDish_mainContainer__contentContainer__3fp-M\",\"mainContainer__contentContainer__imgContainer\":\"addDish_mainContainer__contentContainer__imgContainer__3Vjl5\",\"mainContainer__contentContainer__addDishContainer\":\"addDish_mainContainer__contentContainer__addDishContainer__-8012\",\"mainContainer__contentContainer__addDishContainer__headerContainer\":\"addDish_mainContainer__contentContainer__addDishContainer__headerContainer__1btAy\",\"mainContainer__contentContainer__addDishContainer__formContainer\":\"addDish_mainContainer__contentContainer__addDishContainer__formContainer__3DvtL\",\"mainContainer__contentContainer__addDishContainer__formContainer__submitContainer\":\"addDish_mainContainer__contentContainer__addDishContainer__formContainer__submitContainer__TToIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"inputField_inputContainer__3tW9I\",\"inputContainer__input\":\"inputField_inputContainer__input__2Ztvj\",\"inputContainer__error\":\"inputField_inputContainer__error__301KT\"};","import * as Yup from \"yup\";\r\n\r\nexport const validationSchema = Yup.object({\r\n    name: Yup.string()\r\n        .required(\"Dish name is required\")\r\n        .max(30, 'Must be 30 charactes or less')\r\n        .min(4, 'Must be at least 4 characters'),\r\n    preparation_time: Yup.string()\r\n        .matches(/^(((([0-1][0-9])|(2[0-3])):?[0-5][0-9]:?[0-5][0-9]+$))/g , 'Wrong format, please input as hh:mm:ss')\r\n        .required('Preparation time is required'),\r\n    no_of_slices: Yup.number().notRequired()\r\n        .when('type', {\r\n            is: (val) => val === \"pizza\",\r\n                then: Yup.number()\r\n                .required(\"Number of slices is required\")\r\n                .min(1, 'Must be at least 1 slice')\r\n                .max(10, 'Must be 10 slices or less')\r\n        })\r\n        .when('type', {\r\n            is: (val) => val !== \"pizza\",\r\n            then: Yup.number().notRequired()\r\n        }),\r\n    diameter: Yup.number()\r\n        .when('type', {\r\n            is: (val) => val === \"pizza\",\r\n                then: Yup.number()\r\n                .required(\"Diameter is required\")\r\n                .min(15, \"Must be at least 15cm in diameter\")\r\n                .max(50, 'Must be 50cm or less in diameter'),\r\n        })\r\n        .when('type', {\r\n            is: (val) => val !== \"pizza\",\r\n            then: Yup.number().notRequired()\r\n        }),\r\n    spiciness_scale: Yup.number()\r\n        .when('type', {\r\n            is: (val) => val === \"soup\",\r\n                then: Yup.number()\r\n                .required(\"Spiciness scale is required\")\r\n                .min(1, \"Must be at least 1 in spiciness scale\")\r\n                .max(10, 'Must be 10 or less in spiciness scale'),\r\n        })\r\n        .when('type', {\r\n            is: (val) => val !== \"soup\",\r\n            then: Yup.number().notRequired()\r\n        }),\r\n    slices_of_bread: Yup.number()\r\n        .when('type', {\r\n            is: (val) => val === \"sandwich\",\r\n                then: Yup.number()\r\n                .required(\"Slice of bread is required\")\r\n                .min(1, \"Must be at least 1 slice of bread\")\r\n                .max(12, 'Must be 12 or less slices of bread'),\r\n        })\r\n        .when('type', {\r\n            is: (val) => val !== \"sandwich\",\r\n            then: Yup.number().notRequired()\r\n        })\r\n})","export const postNewDish = async (dishData) => {\r\n    let myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    switch(dishData.type){\r\n        case \"pizza\":\r\n            delete dishData['spiciness_scale']\r\n            delete dishData['slices_of_bread']\r\n            break;\r\n        case \"soup\":\r\n            delete dishData['no_of_slices']\r\n            delete dishData['diameter']\r\n            delete dishData['slices_of_bread']\r\n            break;\r\n        case \"sandwich\":\r\n            delete dishData['no_of_slices']\r\n            delete dishData['diameter']\r\n            delete dishData['spiciness_scale']\r\n            break;\r\n    }\r\n    \r\n    const data = JSON.stringify(dishData);\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: data,\r\n        redirect: 'follow'\r\n    }\r\n\r\n    try{\r\n        const request = await fetch('https://frosty-wood-6558.getsandbox.com:443/dishes', requestOptions);\r\n        const response = request.status;\r\n        if(response === 200){\r\n            return \"Dish added succesfully\"\r\n        }else{\r\n            return `Something went wrong... http:${response}`\r\n        }\r\n    }catch(error){\r\n        console.log(error.message);\r\n    }\r\n}","import {Field, ErrorMessage} from 'formik';\r\nimport InputFieldCSS from './inputField.module.scss';\r\n\r\nexport const InputField = ({name, text, placeholder, type, step, options}) => {\r\n    if(type === \"select\"){\r\n        return(\r\n            <div className={InputFieldCSS.inputContainer}>\r\n                <label htmlFor={name}>Dish type</label>\r\n                <div className={InputFieldCSS.inputContainer__input}>\r\n                    <Field name={name} as={type}>\r\n                        {options.map((val, index) => {\r\n                            return <option key={val + index} value={val}>{val}</option>\r\n                        })}\r\n                    </Field>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className={InputFieldCSS.inputContainer}>\r\n                <label htmlFor={name}>{text}</label>\r\n                <div className={InputFieldCSS.inputContainer__input}>\r\n                    <Field name={name} type={type} placeholder={placeholder} autoComplete=\"off\" step={step}/>\r\n                </div>\r\n                <div className={InputFieldCSS.inputContainer__error}>\r\n                    <ErrorMessage name={name}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport {validationSchema} from './validationSchema/validationSchema';\r\nimport { postNewDish } from './requests/postNewDish';\r\nimport AddDishCSS from '../addDish/addDish.module.scss';\r\nimport { InputField } from './components/inputField/InputField';\r\nimport {useState} from 'react';\r\n\r\nexport const AddDish = () => {\r\n\r\n    const [httpResponse, setHttpResponse] = useState(\"\");\r\n    const [showSubmitInfo, setShowSubmitInfo] = useState(false);\r\n\r\n    return(\r\n        <div className={AddDishCSS.mainContainer}>\r\n            <Formik initialValues={{\r\n                name: '',\r\n                preparation_time: '',\r\n                type: 'pizza',\r\n                no_of_slices: '',\r\n                diameter: '',\r\n                spiciness_scale: '',\r\n                slices_of_bread: ''\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async(data) =>{\r\n                const response = await postNewDish(data);\r\n                setHttpResponse(response);\r\n                setShowSubmitInfo(true);\r\n                setTimeout(() => setShowSubmitInfo(false), 4000)\r\n            }}\r\n            >\r\n                {({values}) =>(\r\n                    <div className={AddDishCSS.mainContainer__contentContainer}>\r\n                        <div className={AddDishCSS.mainContainer__contentContainer__imgContainer}></div>\r\n                            <div className={AddDishCSS.mainContainer__contentContainer__addDishContainer}>\r\n                                <div className={AddDishCSS.mainContainer__contentContainer__addDishContainer__headerContainer}>\r\n                                    <h2>Add new dish</h2>\r\n                                </div>\r\n                                <Form className={AddDishCSS.mainContainer__contentContainer__addDishContainer__formContainer}>\r\n                                    <InputField name=\"name\" text=\"Dish name\" placeholder=\"margharita\" type=\"input\"/>\r\n                                    <InputField name=\"preparation_time\" text=\"Preparation time\" placeholder=\"01:30:00\" type=\"input\"/>\r\n                                    <InputField name=\"type\" type=\"select\" options={[\"pizza\", \"soup\", \"sandwich\"]}/>\r\n                                    {values.type === \"pizza\" && (\r\n                                        <>\r\n                                            <InputField name=\"no_of_slices\" text=\"Number of slices\" placeholder=\"1\" type=\"number\"/>\r\n                                            <InputField name=\"diameter\" text=\"Diameter\" placeholder=\"15\" type=\"number\" step=\"0.1\"/>\r\n                                        </>\r\n                                    )}\r\n                                    {values.type === \"soup\" && (\r\n                                        <InputField name=\"spiciness_scale\" text=\"Spiciness scale\" placeholder=\"1-10\" type=\"number\"/>\r\n                                    )}\r\n                                    {values.type === \"sandwich\" && (\r\n                                        <InputField name=\"slices_of_bread\" text=\"Slices of bread\" placeholder=\"3\" type=\"number\"/>\r\n                                    )}\r\n                                        <div className={AddDishCSS.mainContainer__contentContainer__addDishContainer__formContainer__submitContainer}>\r\n                                            {httpResponse === \"Dish added succesfully\" ? \r\n                                            showSubmitInfo && (<p style={{color:\"green\"}}>{httpResponse}</p>)\r\n                                            : \r\n                                            showSubmitInfo && (<p style={{color:\"red\"}}>{httpResponse}</p>)}\r\n                                            <button type=\"submit\">Add dish</button>\r\n                                        </div>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import {AddDish} from './routes/addDish/AddDish';\r\n\r\nfunction App() {\r\n  return (\r\n    <AddDish/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}